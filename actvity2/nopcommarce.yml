---
- name: intall application in ubuntu
  hosts: webserver
  become: yes
  tasks:
    - name: fail for unsuported os
      ansible.builtin.fail:
        msg: "This playbook is designed only for Ubuntu os"
      when: ansible_facts['distribution'] != 'Ubuntu'
    - name: Fetch a file from a URL
      ansible.builtin.get_url:
        url: " https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb "
        dest: "/home/dell"
    - ansible.builtin.debug:
         msg: "Microsoft key  is installed using package "
    - name: Install Microsoft package
      ansible.builtin.command:
        cmd: dpkg -i packages-microsoft-prod.deb
    - ansible.builtin.debug:
         msg: "dotnet is installed using package {{ package1}}"
    - name: Update package cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Install Microsoft package
      ansible.builtin.apt:
        deb: /home/dell/packages-microsoft-prod.deb
        state: present
    - name: Install Microsoft package-1
      ansible.builtin.apt:
        name: "{{ dotnet_packages }}"
        state: "present"
    - name: install in inginx webserver
      ansible.builtin.apt:
        name: "{{ ng_package }}"
        state: "present"
    - name: nginx service file enabled
      ansible.builtin.service: 
        name: "{{ ng_package }}"
        enabled: yes
        state: "started"
    - name: Create a directory 
      ansible.builtin.file:
        path: /var/www/nopCommerce
        state: directory
        mode: '0755'
    - name: nop commerce install from a URL
      ansible.builtin.get_url:
        url: "{{ nop_url }}"
        dest: "/tmp"
    - name: install in unzip install
      ansible.builtin.apt:
        name: "{{ unzip_package }}"
        state: "present"
    - name: Unarchive a file that is already on the remote machine
      ansible.builtin.unarchive:
        src: /tmp/nopCommerce_4.60.6_NoSource_linux_x64.zip
        dest: /var/www/nopCommerce
        remote_src: yes
