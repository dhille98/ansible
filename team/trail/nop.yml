---
- name: intall application in ubuntu
  hosts: webserver
  become: yes
  tasks:
    - name: fail for unsuported os
      ansible.builtin.fail:
        msg: "This playbook is designed only for Ubuntu os"
      when: ansible_facts['distribution'] != 'Ubuntu'
    - name: Fetch a file from a URL
      ansible.builtin.get_url:
        url: "{{ microsoft_key_url }} "
        dest: "{{ home_dir }}"
    - name: useing cmd
      ansible.builtin.command:
        cmd: dpkg -i /home/ubuntu/packages-microsoft-prod.deb
    - name: install dotnet
      ansible.builtin.apt:
        name: "{{ dotnet_packages }}"
        update_cache: yes
        state: "present"
    - name: install in inginx webserver
      ansible.builtin.apt:
        name: "{{ ng_packages }}"
        state: "present"
    - name: Create a directory 
      ansible.builtin.file:
        path: /var/www/nopCommerce
        state: directory
        mode: '0755'
    - name: unzip nopcommerce file 
      ansible.builtin.get_url:
        url: "{{ nop_url }}"
        dest: "{{ down_path }}"
    - name: unzip the nop
      ansible.builtin.unarchive:
        src: "{{ down_path }}"
        dest: "{{ dest_path }}"
        remote_src: yes  
    - name: Create a directory 
      ansible.builtin.file:
        path: /var/www/nopCommerce/logs
        state: directory
        mode: '0755'
    - name: Create a directory 
      ansible.builtin.file:
        path: /var/www/nopCommerce/bin
        state: directory
        mode: '0755'
    - name: change permission of directory
      ansible.builtin.file: 
        path: /var/www/nopCommerce
        owner: "{{ user }}"
        group: "{{ group }}"
        mode: '0755'
    - name: create nop service file 
      ansible.builtin.copy:
        src: files/nopcommerce.service
        dest: /etc/systemd/system/nopCommerce.service
        owner: root
        group: root
        mode: '0644'
      notify:
        - start nopcommerce
  handlers:
    - name: start nopcommerce
      ansible.builtin.service:
        name: nopCommerce.service
        enabled: yes
        state:  restarted
    - name: Restart service nginx, in all cases
      ansible.builtin.service:
        name: nginx
        state: restarted
  
     
  