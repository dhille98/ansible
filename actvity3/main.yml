--- 
- name: install tomcat in ubuntu os
  hosts: all
  become: yes
  tasks: 
    - name: fail for unsupported os
      ansible.builtin.fail:
        msg: "This playbook is designed only for Ubuntu os"
      when: ansible_facts['distribution'] != 'Ubuntu'
    - name: install java package 
      ansible.builtin.apt: 
        name: "{{ package }}"
        update_cache: yes
        state: "present"
    - ansible.builtin.debug:
        msg: install package "{{ package }}"
    - name: create group with tomcat
      ansible.builtin.group: 
        name: "{{ group_name }}"
        state: "present"
    - ansible.builtin.debug:
        msg: created group called "{{ group_name}}"
    - name: crate user with tomcat
      ansible.builtin.user:
        group: "{{ group_name }}"
        name: "{{ user_name }}"
        home: "{{ home_dir }}"
        shell: "{{ user_shell }}"
    - ansible.builtin.debug:
        msg: created user called "{{ user_name}}"
    #- name: download the tomcat
     # ansible.builtin.get_url: 
      #  url: "{{ tomcat_url }}"
       # dest: /tmp/apache-tomcat-10.0.10.tar.gz
    #- ansible.builtin.debug:
     #   msg: download tomcat url "{{ tomcat_url }}"
    - name: Get stats of the FS object
      ansible.builtin.stat:
        path: /opt/tomcat/apache-tomcat-10.0.10/bin
      register: shell_files
    - name: untar tomcat file 
      ansible.builtin.unarchive:
        src: "{{ tomcat_url }}"
        dest: "{{ home_dir }}"
        owner: "{{ user_name }}"
        remote_src: yes
    - ansible.builtin.debug:
        msg: download tomcat url "{{ tomcat_url }}"
    - name: find all the shell files
      find:
        paths: "/opt/tomcat/apache-tomcat-10.0.10/bin"
        patterns: '*.sh'
      register: shell_files
    - name: change permissions to execute
      file:
        path: "{{ item.path }}"
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
        mode: "755"
      loop: "{{ shell_files.files }}"
  